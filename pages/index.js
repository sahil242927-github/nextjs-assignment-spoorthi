import Head from "next/head";
import { useCallback, useMemo, useState, useTransition } from "react";

import Card from "../components/card";
import Container from "../components/common/Container";
import { productList } from "../data/product-list";
import ProductList from "../components/product-list";
import { NoOfColumns } from "../components/filter/noOfColumns";
import { Search } from "../components/filter/search";
// import { LoadMoreButton } from "../components/common/LoadMoreButton";

export const getStaticProps = async (context) => {
  return {
    props: {
      productList: await productList(),
    },
  };
};

export default function Home({ productList }) {
  const [numOfCols, setNumOfCols] = useState(0);
  const [search, setSearch] = useState("");
  const [isPending, startTransition] = useTransition();

  const handleColumns = useCallback((e) => {
    setNumOfCols((num) => e.target.value);
  }, []);

  const handleSearch = useCallback((e) => {
    startTransition(() => {
      setSearch((search) => e.target.value);
    });
  }, []);

  const NoOfColumnsMemo = useMemo(
    () => <NoOfColumns handleColumns={handleColumns} />,
    [handleColumns]
  );
  const SearchMemo = useMemo(
    () => <Search handleSearch={handleSearch} />,
    [handleSearch]
  );

  // Api doesn't have start param to next number of records
  /* const loadMore = async () => {
    const response = await fetch("https://fakestoreapi.com/products?limit=10&&_start=10");
    return await response.json();
  }; */

  return !productList ? (
    <div>Loading</div>
  ) : (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center items-center w-full">
        {productList.length > 0 && (
          <Container>
            <h1 className="sm:text-center py-4">Product List</h1>
            <section className="flex justify-center items-center">
              <div className="flex justify-between w-full p-5 bg-slate-100 shadow-md mb-3">
                {SearchMemo}
                {NoOfColumnsMemo}
              </div>
            </section>
            <ProductList
              productList={productList}
              numOfCols={numOfCols}
              search={search}
              isPending={isPending}
            />
            {/*  <div className="my-5 flex justify-center">
              <LoadMoreButton onClick={loadMore} />
            </div> */}
          </Container>
        )}
      </main>
    </>
  );
}
